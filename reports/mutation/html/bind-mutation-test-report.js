document.querySelector('mutation-test-report-app').report = {"files":{"/home/tahrim/Téléchargements/Cours/2A/TestUnitaire/tp-jest/src/db.js":{"language":"javascript","mutants":[{"id":"3","location":{"end":{"column":26,"line":1},"start":{"column":19,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4","location":{"end":{"column":49,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"5","location":{"end":{"column":37,"line":4},"start":{"column":28,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"6","location":{"end":{"column":25,"line":8},"start":{"column":13,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"var low = require('lowdb');\nvar FileSync = require('lowdb/adapters/FileSync');\n\nvar adapter = new FileSync('db.json');\nvar db = low(adapter);\n\n// Set some defaults\ndb.defaults({ books: []})\n    .write();\n\nmodule.exports = db;"},"/home/tahrim/Téléchargements/Cours/2A/TestUnitaire/tp-jest/src/book.repository.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":6,"line":8},"start":{"column":21,"line":6}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1","location":{"end":{"column":6,"line":12},"start":{"column":17,"line":10}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"2","location":{"end":{"column":28,"line":11},"start":{"column":21,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"class BookRepository {\n\n    /**\n     * @param db\n     */\n    constructor(db) {\n        this.db = db;\n    }\n\n    save (book) {\n        this.db.get('books').push(book).write();\n    }\n\n    /**\n     * Nombre total de livre\n     */\n    getTotalCount() {\n\n    }\n\n    /**\n     * Somme du prix de tous les livre\n     */\n    getTotalPrice() {\n\n    }\n\n\n    /**\n     * Retourne un livre\n     */\n    getBookByName(bookName) {\n\n    }\n\n    /**\n     * Nombre de livre ajouté par mois\n     *\n     *  [\n     *      {\n     *          year: 2017,\n     *          month, 2,\n     *          count, 129,\n     *          count_cumulative: 129\n     *      },\n     *      {\n     *          year: 2017,\n     *          month, 3,\n     *          count, 200,\n     *          count_cumulative: 329\n     *      },\n     *      ....\n     *  ]\n     */\n    getCountBookAddedByMont(bookName) {\n\n    }\n\n}\n\n\nmodule.exports = BookRepository;"},"/home/tahrim/Téléchargements/Cours/2A/TestUnitaire/tp-jest/src/interval.js":{"language":"javascript","mutants":[{"id":"10","location":{"end":{"column":49,"line":8},"start":{"column":16,"line":8}},"mutatorName":"BinaryExpression","replacement":"\"[\" + this.start + \",\" - this.end","status":"Survived"},{"id":"11","location":{"end":{"column":38,"line":8},"start":{"column":16,"line":8}},"mutatorName":"BinaryExpression","replacement":"\"[\" + this.start - \",\"","status":"Survived"},{"id":"7","location":{"end":{"column":6,"line":5},"start":{"column":29,"line":2}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"14","location":{"end":{"column":38,"line":8},"start":{"column":35,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"15","location":{"end":{"column":55,"line":8},"start":{"column":52,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"16","location":{"end":{"column":6,"line":27},"start":{"column":24,"line":25}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"17","location":{"end":{"column":70,"line":26},"start":{"column":16,"line":26}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start || this.start < interval.end","status":"Killed"},{"id":"8","location":{"end":{"column":6,"line":9},"start":{"column":16,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"18","location":{"end":{"column":70,"line":26},"start":{"column":16,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"9","location":{"end":{"column":55,"line":8},"start":{"column":16,"line":8}},"mutatorName":"BinaryExpression","replacement":"\"[\" + this.start + \",\" + this.end - \"]\"","status":"Survived"},{"id":"19","location":{"end":{"column":70,"line":26},"start":{"column":16,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"20","location":{"end":{"column":41,"line":26},"start":{"column":16,"line":26}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Survived"},{"id":"21","location":{"end":{"column":41,"line":26},"start":{"column":16,"line":26}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Killed"},{"id":"23","location":{"end":{"column":41,"line":26},"start":{"column":16,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"22","location":{"end":{"column":41,"line":26},"start":{"column":16,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"25","location":{"end":{"column":70,"line":26},"start":{"column":45,"line":26}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.end","status":"Killed"},{"id":"24","location":{"end":{"column":70,"line":26},"start":{"column":45,"line":26}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.end","status":"Survived"},{"id":"26","location":{"end":{"column":70,"line":26},"start":{"column":45,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"12","location":{"end":{"column":32,"line":8},"start":{"column":16,"line":8}},"mutatorName":"BinaryExpression","replacement":"\"[\" - this.start","status":"Survived"},{"id":"27","location":{"end":{"column":70,"line":26},"start":{"column":45,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"13","location":{"end":{"column":19,"line":8},"start":{"column":16,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"28","location":{"end":{"column":6,"line":47},"start":{"column":24,"line":45}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"29","location":{"end":{"column":64,"line":46},"start":{"column":10,"line":46}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.start || interval.end <= this.end","status":"Killed"},{"id":"30","location":{"end":{"column":64,"line":46},"start":{"column":10,"line":46}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"31","location":{"end":{"column":64,"line":46},"start":{"column":10,"line":46}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"32","location":{"end":{"column":37,"line":46},"start":{"column":10,"line":46}},"mutatorName":"BinaryExpression","replacement":"interval.start > this.start","status":"Killed"},{"id":"34","location":{"end":{"column":37,"line":46},"start":{"column":10,"line":46}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"37","location":{"end":{"column":64,"line":46},"start":{"column":41,"line":46}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.end","status":"Killed"},{"id":"36","location":{"end":{"column":64,"line":46},"start":{"column":41,"line":46}},"mutatorName":"BinaryExpression","replacement":"interval.end < this.end","status":"Killed"},{"id":"33","location":{"end":{"column":37,"line":46},"start":{"column":10,"line":46}},"mutatorName":"BinaryExpression","replacement":"interval.start < this.start","status":"Killed"},{"id":"35","location":{"end":{"column":37,"line":46},"start":{"column":10,"line":46}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"38","location":{"end":{"column":64,"line":46},"start":{"column":41,"line":46}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"39","location":{"end":{"column":64,"line":46},"start":{"column":41,"line":46}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"40","location":{"end":{"column":6,"line":81},"start":{"column":21,"line":65}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"41","location":{"end":{"column":30,"line":68},"start":{"column":5,"line":68}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"42","location":{"end":{"column":30,"line":68},"start":{"column":5,"line":68}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"43","location":{"end":{"column":30,"line":68},"start":{"column":5,"line":68}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Survived"},{"id":"45","location":{"end":{"column":3,"line":70},"start":{"column":32,"line":68}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"44","location":{"end":{"column":30,"line":68},"start":{"column":5,"line":68}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Killed"},{"id":"46","location":{"end":{"column":26,"line":69},"start":{"column":10,"line":69}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"47","location":{"end":{"column":37,"line":70},"start":{"column":12,"line":70}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"48","location":{"end":{"column":37,"line":70},"start":{"column":12,"line":70}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"50","location":{"end":{"column":37,"line":70},"start":{"column":12,"line":70}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.start","status":"Killed"},{"id":"49","location":{"end":{"column":37,"line":70},"start":{"column":12,"line":70}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.start","status":"Killed"},{"id":"51","location":{"end":{"column":3,"line":72},"start":{"column":38,"line":70}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"53","location":{"end":{"column":31,"line":74},"start":{"column":5,"line":74}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"52","location":{"end":{"column":24,"line":71},"start":{"column":9,"line":71}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"55","location":{"end":{"column":31,"line":74},"start":{"column":5,"line":74}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.start","status":"Survived"},{"id":"56","location":{"end":{"column":31,"line":74},"start":{"column":5,"line":74}},"mutatorName":"BinaryExpression","replacement":"interval.start <= this.start","status":"Killed"},{"id":"54","location":{"end":{"column":31,"line":74},"start":{"column":5,"line":74}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"59","location":{"end":{"column":27,"line":77},"start":{"column":5,"line":77}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.end","status":"Survived"},{"id":"58","location":{"end":{"column":27,"line":77},"start":{"column":5,"line":77}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"57","location":{"end":{"column":27,"line":77},"start":{"column":5,"line":77}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"60","location":{"end":{"column":27,"line":77},"start":{"column":5,"line":77}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.end","status":"Killed"},{"id":"61","location":{"end":{"column":6,"line":117},"start":{"column":28,"line":99}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"62","location":{"end":{"column":62,"line":102},"start":{"column":5,"line":102}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"63","location":{"end":{"column":62,"line":102},"start":{"column":5,"line":102}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"64","location":{"end":{"column":62,"line":102},"start":{"column":5,"line":102}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start || this.start < interval.start","status":"Killed"},{"id":"65","location":{"end":{"column":30,"line":102},"start":{"column":5,"line":102}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Survived"},{"id":"66","location":{"end":{"column":30,"line":102},"start":{"column":5,"line":102}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Killed"},{"id":"67","location":{"end":{"column":30,"line":102},"start":{"column":5,"line":102}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"68","location":{"end":{"column":30,"line":102},"start":{"column":5,"line":102}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"69","location":{"end":{"column":62,"line":102},"start":{"column":34,"line":102}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start","status":"Survived"},{"id":"71","location":{"end":{"column":62,"line":102},"start":{"column":34,"line":102}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"72","location":{"end":{"column":62,"line":102},"start":{"column":34,"line":102}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"70","location":{"end":{"column":62,"line":102},"start":{"column":34,"line":102}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.start","status":"Killed"},{"id":"73","location":{"end":{"column":3,"line":108},"start":{"column":63,"line":102}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"74","location":{"end":{"column":36,"line":104},"start":{"column":25,"line":104}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"75","location":{"end":{"column":36,"line":104},"start":{"column":25,"line":104}},"mutatorName":"BinaryExpression","replacement":"i < this.end","status":"Killed"},{"id":"76","location":{"end":{"column":36,"line":104},"start":{"column":25,"line":104}},"mutatorName":"BinaryExpression","replacement":"i > this.end","status":"Killed"},{"id":"78","location":{"end":{"column":4,"line":107},"start":{"column":42,"line":104}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"79","location":{"end":{"column":23,"line":105},"start":{"column":7,"line":105}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"80","location":{"end":{"column":23,"line":105},"start":{"column":7,"line":105}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"81","location":{"end":{"column":23,"line":105},"start":{"column":7,"line":105}},"mutatorName":"BinaryExpression","replacement":"i >= interval.end","status":"Killed"},{"id":"83","location":{"end":{"column":33,"line":105},"start":{"column":24,"line":105}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"82","location":{"end":{"column":23,"line":105},"start":{"column":7,"line":105}},"mutatorName":"BinaryExpression","replacement":"i <= interval.end","status":"Killed"},{"id":"84","location":{"end":{"column":68,"line":108},"start":{"column":12,"line":108}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"86","location":{"end":{"column":68,"line":108},"start":{"column":12,"line":108}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.start || interval.start < this.start","status":"Killed"},{"id":"87","location":{"end":{"column":37,"line":108},"start":{"column":12,"line":108}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.start","status":"Killed"},{"id":"85","location":{"end":{"column":68,"line":108},"start":{"column":12,"line":108}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"89","location":{"end":{"column":37,"line":108},"start":{"column":12,"line":108}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"88","location":{"end":{"column":37,"line":108},"start":{"column":12,"line":108}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.start","status":"Killed"},{"id":"90","location":{"end":{"column":37,"line":108},"start":{"column":12,"line":108}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"91","location":{"end":{"column":68,"line":108},"start":{"column":41,"line":108}},"mutatorName":"BinaryExpression","replacement":"interval.start <= this.start","status":"Survived"},{"id":"93","location":{"end":{"column":68,"line":108},"start":{"column":41,"line":108}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"92","location":{"end":{"column":68,"line":108},"start":{"column":41,"line":108}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.start","status":"Killed"},{"id":"94","location":{"end":{"column":68,"line":108},"start":{"column":41,"line":108}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"97","location":{"end":{"column":33,"line":110},"start":{"column":17,"line":110}},"mutatorName":"BinaryExpression","replacement":"j < interval.end","status":"Killed"},{"id":"95","location":{"end":{"column":3,"line":114},"start":{"column":69,"line":108}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"96","location":{"end":{"column":33,"line":110},"start":{"column":17,"line":110}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"98","location":{"end":{"column":33,"line":110},"start":{"column":17,"line":110}},"mutatorName":"BinaryExpression","replacement":"j > interval.end","status":"Killed"},{"id":"101","location":{"end":{"column":17,"line":111},"start":{"column":7,"line":111}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"100","location":{"end":{"column":4,"line":113},"start":{"column":39,"line":110}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"102","location":{"end":{"column":17,"line":111},"start":{"column":7,"line":111}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"105","location":{"end":{"column":21,"line":115},"start":{"column":5,"line":115}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"104","location":{"end":{"column":17,"line":111},"start":{"column":7,"line":111}},"mutatorName":"BinaryExpression","replacement":"j <= this.end","status":"Killed"},{"id":"103","location":{"end":{"column":17,"line":111},"start":{"column":7,"line":111}},"mutatorName":"BinaryExpression","replacement":"j >= this.end","status":"Killed"},{"id":"106","location":{"end":{"column":21,"line":115},"start":{"column":5,"line":115}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"107","location":{"end":{"column":21,"line":115},"start":{"column":5,"line":115}},"mutatorName":"BinaryExpression","replacement":"newStart != null","status":"Killed"},{"id":"108","location":{"end":{"column":6,"line":176},"start":{"column":25,"line":135}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"109","location":{"end":{"column":62,"line":136},"start":{"column":6,"line":136}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"110","location":{"end":{"column":62,"line":136},"start":{"column":6,"line":136}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"111","location":{"end":{"column":62,"line":136},"start":{"column":6,"line":136}},"mutatorName":"BinaryExpression","replacement":"this.start == interval.start || this.end == interval.end","status":"Survived"},{"id":"112","location":{"end":{"column":34,"line":136},"start":{"column":6,"line":136}},"mutatorName":"BinaryExpression","replacement":"this.start != interval.start","status":"Killed"},{"id":"113","location":{"end":{"column":34,"line":136},"start":{"column":6,"line":136}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"114","location":{"end":{"column":34,"line":136},"start":{"column":6,"line":136}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"116","location":{"end":{"column":62,"line":136},"start":{"column":38,"line":136}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"115","location":{"end":{"column":62,"line":136},"start":{"column":38,"line":136}},"mutatorName":"BinaryExpression","replacement":"this.end != interval.end","status":"Killed"},{"id":"117","location":{"end":{"column":62,"line":136},"start":{"column":38,"line":136}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"118","location":{"end":{"column":30,"line":137},"start":{"column":5,"line":137}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"119","location":{"end":{"column":30,"line":137},"start":{"column":5,"line":137}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"120","location":{"end":{"column":30,"line":137},"start":{"column":5,"line":137}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Survived"},{"id":"121","location":{"end":{"column":30,"line":137},"start":{"column":5,"line":137}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Killed"},{"id":"122","location":{"end":{"column":3,"line":139},"start":{"column":32,"line":137}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"123","location":{"end":{"column":26,"line":138},"start":{"column":10,"line":138}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"124","location":{"end":{"column":37,"line":139},"start":{"column":12,"line":139}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"125","location":{"end":{"column":37,"line":139},"start":{"column":12,"line":139}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"126","location":{"end":{"column":37,"line":139},"start":{"column":12,"line":139}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.start","status":"Survived"},{"id":"127","location":{"end":{"column":37,"line":139},"start":{"column":12,"line":139}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.start","status":"Killed"},{"id":"128","location":{"end":{"column":3,"line":141},"start":{"column":38,"line":139}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"129","location":{"end":{"column":24,"line":140},"start":{"column":9,"line":140}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"131","location":{"end":{"column":85,"line":147},"start":{"column":5,"line":147}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"130","location":{"end":{"column":85,"line":147},"start":{"column":5,"line":147}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"132","location":{"end":{"column":85,"line":147},"start":{"column":5,"line":147}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start && interval.start > this.start || interval.end > this.end","status":"Killed"},{"id":"134","location":{"end":{"column":58,"line":147},"start":{"column":6,"line":147}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"133","location":{"end":{"column":58,"line":147},"start":{"column":6,"line":147}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start || interval.start > this.start","status":"Killed"},{"id":"135","location":{"end":{"column":58,"line":147},"start":{"column":6,"line":147}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"136","location":{"end":{"column":29,"line":147},"start":{"column":6,"line":147}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Survived"},{"id":"137","location":{"end":{"column":29,"line":147},"start":{"column":6,"line":147}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Killed"},{"id":"138","location":{"end":{"column":29,"line":147},"start":{"column":6,"line":147}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"139","location":{"end":{"column":29,"line":147},"start":{"column":6,"line":147}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"141","location":{"end":{"column":58,"line":147},"start":{"column":33,"line":147}},"mutatorName":"BinaryExpression","replacement":"interval.start <= this.start","status":"Killed"},{"id":"140","location":{"end":{"column":58,"line":147},"start":{"column":33,"line":147}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.start","status":"Survived"},{"id":"143","location":{"end":{"column":58,"line":147},"start":{"column":33,"line":147}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"142","location":{"end":{"column":58,"line":147},"start":{"column":33,"line":147}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"144","location":{"end":{"column":85,"line":147},"start":{"column":63,"line":147}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.end","status":"Survived"},{"id":"145","location":{"end":{"column":85,"line":147},"start":{"column":63,"line":147}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.end","status":"Killed"},{"id":"146","location":{"end":{"column":85,"line":147},"start":{"column":63,"line":147}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"147","location":{"end":{"column":85,"line":147},"start":{"column":63,"line":147}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"149","location":{"end":{"column":93,"line":153},"start":{"column":11,"line":153}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"148","location":{"end":{"column":3,"line":153},"start":{"column":86,"line":147}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"150","location":{"end":{"column":93,"line":153},"start":{"column":11,"line":153}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"151","location":{"end":{"column":93,"line":153},"start":{"column":11,"line":153}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.start && this.start > interval.start || this.end > interval.end","status":"Killed"},{"id":"152","location":{"end":{"column":66,"line":153},"start":{"column":12,"line":153}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.start || this.start > interval.start","status":"Killed"},{"id":"153","location":{"end":{"column":66,"line":153},"start":{"column":12,"line":153}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"155","location":{"end":{"column":36,"line":153},"start":{"column":12,"line":153}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.start","status":"Survived"},{"id":"156","location":{"end":{"column":36,"line":153},"start":{"column":12,"line":153}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.start","status":"Killed"},{"id":"154","location":{"end":{"column":66,"line":153},"start":{"column":12,"line":153}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"157","location":{"end":{"column":36,"line":153},"start":{"column":12,"line":153}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"158","location":{"end":{"column":36,"line":153},"start":{"column":12,"line":153}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"159","location":{"end":{"column":66,"line":153},"start":{"column":40,"line":153}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.start","status":"Survived"},{"id":"161","location":{"end":{"column":66,"line":153},"start":{"column":40,"line":153}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"162","location":{"end":{"column":66,"line":153},"start":{"column":40,"line":153}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"160","location":{"end":{"column":66,"line":153},"start":{"column":40,"line":153}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start","status":"Killed"},{"id":"163","location":{"end":{"column":93,"line":153},"start":{"column":71,"line":153}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.end","status":"Survived"},{"id":"164","location":{"end":{"column":93,"line":153},"start":{"column":71,"line":153}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.end","status":"Killed"},{"id":"165","location":{"end":{"column":93,"line":153},"start":{"column":71,"line":153}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"168","location":{"end":{"column":91,"line":159},"start":{"column":11,"line":159}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"166","location":{"end":{"column":93,"line":153},"start":{"column":71,"line":153}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"167","location":{"end":{"column":3,"line":159},"start":{"column":94,"line":153}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"170","location":{"end":{"column":91,"line":159},"start":{"column":11,"line":159}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start && interval.start > this.start || interval.end < this.end","status":"Survived"},{"id":"169","location":{"end":{"column":91,"line":159},"start":{"column":11,"line":159}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"171","location":{"end":{"column":64,"line":159},"start":{"column":12,"line":159}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start || interval.start > this.start","status":"Survived"},{"id":"172","location":{"end":{"column":64,"line":159},"start":{"column":12,"line":159}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"175","location":{"end":{"column":35,"line":159},"start":{"column":12,"line":159}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Killed"},{"id":"174","location":{"end":{"column":35,"line":159},"start":{"column":12,"line":159}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Survived"},{"id":"176","location":{"end":{"column":35,"line":159},"start":{"column":12,"line":159}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"173","location":{"end":{"column":64,"line":159},"start":{"column":12,"line":159}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"177","location":{"end":{"column":35,"line":159},"start":{"column":12,"line":159}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"180","location":{"end":{"column":64,"line":159},"start":{"column":39,"line":159}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"179","location":{"end":{"column":64,"line":159},"start":{"column":39,"line":159}},"mutatorName":"BinaryExpression","replacement":"interval.start <= this.start","status":"Killed"},{"id":"181","location":{"end":{"column":64,"line":159},"start":{"column":39,"line":159}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"182","location":{"end":{"column":91,"line":159},"start":{"column":69,"line":159}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.end","status":"Survived"},{"id":"178","location":{"end":{"column":64,"line":159},"start":{"column":39,"line":159}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.start","status":"Survived"},{"id":"183","location":{"end":{"column":91,"line":159},"start":{"column":69,"line":159}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.end","status":"Killed"},{"id":"184","location":{"end":{"column":91,"line":159},"start":{"column":69,"line":159}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"185","location":{"end":{"column":91,"line":159},"start":{"column":69,"line":159}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"186","location":{"end":{"column":3,"line":165},"start":{"column":92,"line":159}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"187","location":{"end":{"column":95,"line":165},"start":{"column":12,"line":165}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"188","location":{"end":{"column":95,"line":165},"start":{"column":12,"line":165}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"189","location":{"end":{"column":95,"line":165},"start":{"column":12,"line":165}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.start && this.start > interval.start || this.end < interval.end","status":"Survived"},{"id":"193","location":{"end":{"column":37,"line":165},"start":{"column":13,"line":165}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.start","status":"Survived"},{"id":"194","location":{"end":{"column":37,"line":165},"start":{"column":13,"line":165}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.start","status":"Killed"},{"id":"192","location":{"end":{"column":67,"line":165},"start":{"column":13,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"190","location":{"end":{"column":67,"line":165},"start":{"column":13,"line":165}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.start || this.start > interval.start","status":"Survived"},{"id":"191","location":{"end":{"column":67,"line":165},"start":{"column":13,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"196","location":{"end":{"column":37,"line":165},"start":{"column":13,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"195","location":{"end":{"column":37,"line":165},"start":{"column":13,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"197","location":{"end":{"column":67,"line":165},"start":{"column":41,"line":165}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.start","status":"Survived"},{"id":"198","location":{"end":{"column":67,"line":165},"start":{"column":41,"line":165}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start","status":"Killed"},{"id":"199","location":{"end":{"column":67,"line":165},"start":{"column":41,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"200","location":{"end":{"column":67,"line":165},"start":{"column":41,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"201","location":{"end":{"column":95,"line":165},"start":{"column":72,"line":165}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.end","status":"Survived"},{"id":"202","location":{"end":{"column":95,"line":165},"start":{"column":72,"line":165}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.end","status":"Killed"},{"id":"203","location":{"end":{"column":95,"line":165},"start":{"column":72,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"204","location":{"end":{"column":95,"line":165},"start":{"column":72,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"205","location":{"end":{"column":3,"line":171},"start":{"column":96,"line":165}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"206","location":{"end":{"column":20,"line":175},"start":{"column":9,"line":175}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"77","location":{"end":{"column":41,"line":104},"start":{"column":38,"line":104}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Timeout"},{"id":"99","location":{"end":{"column":38,"line":110},"start":{"column":35,"line":110}},"mutatorName":"PostfixUnaryExpression","replacement":"j--","status":"Timeout"}],"source":"class Interval {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end\n    }\n\n    toString() {\n        return \"[\" + this.start + \",\" + this.end + \"]\";\n    }\n\n    /**\n     * Exemple 1 :\n     *      interval1 =                          ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval2 =                                  ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval1.overlaps(interval2) => true\n     *\n     * Exemple 2 :\n     *      interval1 =                          ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval2 =                                                       ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval1.overlaps(interval2) => false\n     *\n     * @param {Interval} interval\n     * @returns {boolean}\n     */\n    overlaps(interval) {\n        return this.end > interval.start && this.start < interval.end;\n    }\n\n    /**\n     * Retourne true si cet interval contient le paramètre interval\n     *\n     * Exemple 1 :\n     *      interval1 =                          ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval2 =                                  ▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval1.includes(interval2) => true\n     *\n     * Exemple 2 :\n     *      interval1 =                          ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval2 =                              ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval1.includes(interval2) => false\n     *\n     * @param {Interval} interval\n     * @returns {boolean}\n     */\n    includes(interval) {\n\treturn (interval.start>= this.start && interval.end<= this.end);\n    };\n\n    /**\n     * Retourne l'union de deux intervals\n     *\n     * Exemple 1 :\n     *      interval1 =                          ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval2 =                                              ▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval1.union(interval2) =>        ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\n     *\n     * Exemple 2 :\n     *      interval1 =                          ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval2 =                                                      ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval1.union(interval2) =>        ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒   ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\n     *\n     * @param {Interval} interval\n     * @returns {Interval[]}\n     */\n    union(interval) {\n\tlet newStart = this.start;\n\tlet newEnd = this.end;\n\tif(this.end < interval.start ){\n\t\treturn [this, interval];\n\t}else if( interval.end < this.start){\n\t\treturn[interval,this];\n\t} \t\n\t\t\t\n\tif(interval.start> this.start) newStart= this.start;\n\telse newStart= interval.start;\n\t\n\tif(interval.end< this.end) newEnd= this.end;\n\telse newEnd= interval.end;\n\t\n\treturn new Interval(newStart,newEnd);\n    };\n\n    /**\n     * Retourne l'intersection de deux intervals\n     *\n     * Exemple 1 :\n     *      interval1 =                          ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval2 =                                              ▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval1.intersection(interval2) =>                     ▒▒▒▒▒\n     *\n     * Exemple 2 :\n     *      interval1 =                          ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval2 =                                                      ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval1.intersection(interval2) => <tableau vide>\n     *\n     * @param {Interval} interval\n     * @returns {Interval|null}\n     */\n    intersection(interval) {\n\tlet newStart = null;\n\tlet newEnd = null;\t\n\tif(this.end > interval.start && this.start < interval. start){\n\t\tnewStart = interval.start;\n\t\tfor (let i= newStart; i<=this.end; i++){\n\t\t\tif(i > interval.end){ break;}\n\t\t\tnewEnd = i;\n\t\t}\n\t}else if (interval.end > this.start && interval.start < this.start){\n\t\tnewStart = this.start;\n\t\tfor(let j=0 ; j<= interval.end; j++){\n\t\t\tif(j>this.end) break;\n\t\t\tnewEnd = j ;\n\t\t}\n\t}\n\tif(newStart == null) return null;\n\treturn new Interval(newStart,newEnd);\n    };\n\n    /**\n     * Retourne l'exclusion de deux intervals\n     *\n     * Exemple 1 :\n     *      interval1 =                          ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval2 =                                              ▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval1.exclusion(interval2) =>    ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒     ▒▒▒▒▒▒▒▒\n     *\n     * Exemple 2 :\n     *      interval1 =                          ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval2 =                                                      ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n     *      interval1.exclusion(interval2) =>    ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒   ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\n     *\n     * @param {Interval} interval\n     * @returns {Interval[]}\n     */\n    exclusion(interval) {\n\tif (this.start == interval.start && this.end == interval.end) return null;\t\n\tif(this.end < interval.start ){\n\t\treturn [this, interval];\n\t}else if( interval.end < this.start){\n\t\treturn[interval,this];\n\t}\n\tlet inter_start1=null;\n\tlet inter_start2=null;\n\tlet inter_end1=null;\n\tlet inter_end2=null;\n\tlet inter = this.intersection(interval);\t\n\tif((this.end>interval.start && interval.start>this.start) && interval.end> this.end){\n\t\tinter_start1 = this.start;\n\t\tinter_end1 = inter.start \n\t\t\n\t\tinter_start2 = inter.end;\n\t\tinter_end2 = interval.end;\n\t}else if((interval.end> this.start && this.start> interval.start) && this.end> interval.end){\n\t\tinter_start1 = interval.start;\n\t\tinter_end1 = inter.start \n\t\t\n\t\tinter_start2 = inter.end;\n\t\tinter_end2 = this.end;\n\t}else if((this.end>interval.start && interval.start>this.start) && interval.end< this.end){\n\t\tinter_start1 = this.start;\n\t\tinter_end1 = inter.start \n\t\t\n\t\tinter_start2 = inter.end;\n\t\tinter_end2 = this.end;\n\t}else if ((interval.end> this.start && this.start> interval.start) && this.end < interval.end){\n\t\tinter_start1 = interval.start;\n\t\tinter_end1 = inter.start \n\t\t\n\t\tinter_start2 = inter.end;\n\t\tinter_end2 = interval.end;\n\t}\n\n\tlet res1 = new Interval(inter_start1,inter_end1);\n\tlet res2 = new Interval(inter_start2,inter_end2);\n\treturn [res1,res2]\n    };\n}\n\nmodule.exports = Interval;\n"},"/home/tahrim/Téléchargements/Cours/2A/TestUnitaire/tp-jest/src/math.js":{"language":"javascript","mutants":[{"id":"208","location":{"end":{"column":16,"line":3},"start":{"column":9,"line":3}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"207","location":{"end":{"column":2,"line":16},"start":{"column":25,"line":2}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"211","location":{"end":{"column":6,"line":5},"start":{"column":18,"line":3}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"209","location":{"end":{"column":16,"line":3},"start":{"column":9,"line":3}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"210","location":{"end":{"column":16,"line":3},"start":{"column":9,"line":3}},"mutatorName":"BinaryExpression","replacement":"n !== 0","status":"Killed"},{"id":"212","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"213","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"214","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"BinaryExpression","replacement":"n > 3000","status":"Killed"},{"id":"215","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"BinaryExpression","replacement":"n < 3000","status":"Killed"},{"id":"217","location":{"end":{"column":28,"line":8},"start":{"column":15,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"216","location":{"end":{"column":6,"line":9},"start":{"column":20,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"218","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"219","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"220","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"BinaryExpression","replacement":"n <= 0","status":"Survived"},{"id":"222","location":{"end":{"column":6,"line":13},"start":{"column":16,"line":11}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"221","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"BinaryExpression","replacement":"n >= 0","status":"Killed"},{"id":"224","location":{"end":{"column":37,"line":15},"start":{"column":12,"line":15}},"mutatorName":"BinaryExpression","replacement":"n / Util.factorial(n - 1)","status":"Killed"},{"id":"223","location":{"end":{"column":30,"line":12},"start":{"column":15,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"225","location":{"end":{"column":36,"line":15},"start":{"column":31,"line":15}},"mutatorName":"BinaryExpression","replacement":"n + 1","status":"Killed"},{"id":"226","location":{"end":{"column":2,"line":37},"start":{"column":29,"line":26}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"229","location":{"end":{"column":27,"line":27},"start":{"column":9,"line":27}},"mutatorName":"BinaryExpression","replacement":"n === 1 && n === 0","status":"Killed"},{"id":"231","location":{"end":{"column":16,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"228","location":{"end":{"column":27,"line":27},"start":{"column":9,"line":27}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"227","location":{"end":{"column":27,"line":27},"start":{"column":9,"line":27}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"230","location":{"end":{"column":16,"line":27},"start":{"column":9,"line":27}},"mutatorName":"BinaryExpression","replacement":"n !== 1","status":"Killed"},{"id":"232","location":{"end":{"column":16,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"233","location":{"end":{"column":27,"line":27},"start":{"column":20,"line":27}},"mutatorName":"BinaryExpression","replacement":"n !== 0","status":"Killed"},{"id":"236","location":{"end":{"column":6,"line":29},"start":{"column":29,"line":27}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"235","location":{"end":{"column":27,"line":27},"start":{"column":20,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"234","location":{"end":{"column":27,"line":27},"start":{"column":20,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"237","location":{"end":{"column":21,"line":28},"start":{"column":16,"line":28}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Killed"},{"id":"238","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"242","location":{"end":{"column":6,"line":32},"start":{"column":16,"line":30}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"240","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"BinaryExpression","replacement":"n <= 0","status":"Survived"},{"id":"243","location":{"end":{"column":50,"line":31},"start":{"column":15,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"244","location":{"end":{"column":26,"line":33},"start":{"column":21,"line":33}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"239","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"241","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"BinaryExpression","replacement":"n >= 0","status":"Killed"},{"id":"246","location":{"end":{"column":26,"line":33},"start":{"column":21,"line":33}},"mutatorName":"BinaryExpression","replacement":"i >= n","status":"Killed"},{"id":"247","location":{"end":{"column":31,"line":33},"start":{"column":28,"line":33}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Killed"},{"id":"249","location":{"end":{"column":24,"line":34},"start":{"column":13,"line":34}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"248","location":{"end":{"column":24,"line":34},"start":{"column":13,"line":34}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"250","location":{"end":{"column":24,"line":34},"start":{"column":13,"line":34}},"mutatorName":"BinaryExpression","replacement":"n % i !== 0","status":"Killed"},{"id":"245","location":{"end":{"column":26,"line":33},"start":{"column":21,"line":33}},"mutatorName":"BinaryExpression","replacement":"i <= n","status":"Killed"},{"id":"251","location":{"end":{"column":18,"line":34},"start":{"column":13,"line":34}},"mutatorName":"BinaryExpression","replacement":"n * i","status":"Killed"},{"id":"255","location":{"end":{"column":24,"line":51},"start":{"column":5,"line":51}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"253","location":{"end":{"column":16,"line":35},"start":{"column":12,"line":35}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"256","location":{"end":{"column":24,"line":51},"start":{"column":5,"line":51}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"254","location":{"end":{"column":2,"line":63},"start":{"column":29,"line":49}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"257","location":{"end":{"column":24,"line":51},"start":{"column":5,"line":51}},"mutatorName":"BinaryExpression","replacement":"typeof n == typeof 1","status":"Killed"},{"id":"258","location":{"end":{"column":83,"line":51},"start":{"column":32,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"260","location":{"end":{"column":9,"line":52},"start":{"column":5,"line":52}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"262","location":{"end":{"column":9,"line":52},"start":{"column":5,"line":52}},"mutatorName":"BinaryExpression","replacement":"n < 2","status":"Killed"},{"id":"259","location":{"end":{"column":9,"line":52},"start":{"column":5,"line":52}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"261","location":{"end":{"column":9,"line":52},"start":{"column":5,"line":52}},"mutatorName":"BinaryExpression","replacement":"n > 2","status":"Killed"},{"id":"263","location":{"end":{"column":3,"line":58},"start":{"column":10,"line":52}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"264","location":{"end":{"column":20,"line":53},"start":{"column":16,"line":53}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"269","location":{"end":{"column":22,"line":54},"start":{"column":7,"line":54}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"265","location":{"end":{"column":20,"line":53},"start":{"column":16,"line":53}},"mutatorName":"BinaryExpression","replacement":"i < n","status":"Killed"},{"id":"268","location":{"end":{"column":4,"line":57},"start":{"column":25,"line":53}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"266","location":{"end":{"column":20,"line":53},"start":{"column":16,"line":53}},"mutatorName":"BinaryExpression","replacement":"i > n","status":"Killed"},{"id":"267","location":{"end":{"column":24,"line":53},"start":{"column":21,"line":53}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Killed"},{"id":"252","location":{"end":{"column":38,"line":34},"start":{"column":33,"line":34}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Killed"},{"id":"271","location":{"end":{"column":5,"line":56},"start":{"column":23,"line":54}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"274","location":{"end":{"column":8,"line":59},"start":{"column":5,"line":59}},"mutatorName":"BinaryExpression","replacement":"n <= 0","status":"Survived"},{"id":"273","location":{"end":{"column":8,"line":59},"start":{"column":5,"line":59}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"272","location":{"end":{"column":8,"line":59},"start":{"column":5,"line":59}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"275","location":{"end":{"column":8,"line":59},"start":{"column":5,"line":59}},"mutatorName":"BinaryExpression","replacement":"n >= 0","status":"Killed"},{"id":"276","location":{"end":{"column":3,"line":61},"start":{"column":9,"line":59}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"277","location":{"end":{"column":47,"line":60},"start":{"column":9,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"279","location":{"end":{"column":24,"line":79},"start":{"column":5,"line":79}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"281","location":{"end":{"column":24,"line":79},"start":{"column":5,"line":79}},"mutatorName":"BinaryExpression","replacement":"typeof n == typeof 1","status":"Killed"},{"id":"282","location":{"end":{"column":83,"line":79},"start":{"column":32,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"278","location":{"end":{"column":2,"line":90},"start":{"column":29,"line":77}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"283","location":{"end":{"column":8,"line":80},"start":{"column":5,"line":80}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"280","location":{"end":{"column":24,"line":79},"start":{"column":5,"line":79}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"284","location":{"end":{"column":8,"line":80},"start":{"column":5,"line":80}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"285","location":{"end":{"column":8,"line":80},"start":{"column":5,"line":80}},"mutatorName":"BinaryExpression","replacement":"n <= 1","status":"Survived"},{"id":"286","location":{"end":{"column":8,"line":80},"start":{"column":5,"line":80}},"mutatorName":"BinaryExpression","replacement":"n >= 1","status":"Killed"},{"id":"289","location":{"end":{"column":22,"line":83},"start":{"column":16,"line":83}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"288","location":{"end":{"column":47,"line":81},"start":{"column":9,"line":81}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"287","location":{"end":{"column":3,"line":82},"start":{"column":9,"line":80}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"290","location":{"end":{"column":22,"line":83},"start":{"column":16,"line":83}},"mutatorName":"BinaryExpression","replacement":"i < n","status":"Killed"},{"id":"291","location":{"end":{"column":22,"line":83},"start":{"column":16,"line":83}},"mutatorName":"BinaryExpression","replacement":"i > n","status":"Killed"},{"id":"270","location":{"end":{"column":22,"line":54},"start":{"column":7,"line":54}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"293","location":{"end":{"column":3,"line":88},"start":{"column":28,"line":83}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"298","location":{"end":{"column":46,"line":84},"start":{"column":36,"line":84}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"294","location":{"end":{"column":22,"line":84},"start":{"column":11,"line":84}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"295","location":{"end":{"column":22,"line":84},"start":{"column":11,"line":84}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"297","location":{"end":{"column":17,"line":84},"start":{"column":11,"line":84}},"mutatorName":"BinaryExpression","replacement":"i * 15","status":"Killed"},{"id":"299","location":{"end":{"column":26,"line":85},"start":{"column":16,"line":85}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"296","location":{"end":{"column":22,"line":84},"start":{"column":11,"line":84}},"mutatorName":"BinaryExpression","replacement":"i % 15 != 0","status":"Killed"},{"id":"303","location":{"end":{"column":46,"line":85},"start":{"column":40,"line":85}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"302","location":{"end":{"column":21,"line":85},"start":{"column":16,"line":85}},"mutatorName":"BinaryExpression","replacement":"i * 3","status":"Killed"},{"id":"301","location":{"end":{"column":26,"line":85},"start":{"column":16,"line":85}},"mutatorName":"BinaryExpression","replacement":"i % 3 != 0","status":"Killed"},{"id":"304","location":{"end":{"column":26,"line":86},"start":{"column":16,"line":86}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"305","location":{"end":{"column":26,"line":86},"start":{"column":16,"line":86}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"306","location":{"end":{"column":26,"line":86},"start":{"column":16,"line":86}},"mutatorName":"BinaryExpression","replacement":"i % 5 != 0","status":"Killed"},{"id":"300","location":{"end":{"column":26,"line":85},"start":{"column":16,"line":85}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"307","location":{"end":{"column":21,"line":86},"start":{"column":16,"line":86}},"mutatorName":"BinaryExpression","replacement":"i * 5","status":"Killed"},{"id":"308","location":{"end":{"column":46,"line":86},"start":{"column":40,"line":86}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"310","location":{"end":{"column":29,"line":102},"start":{"column":5,"line":102}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"311","location":{"end":{"column":29,"line":102},"start":{"column":5,"line":102}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"313","location":{"end":{"column":29,"line":102},"start":{"column":21,"line":102}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"309","location":{"end":{"column":2,"line":109},"start":{"column":33,"line":101}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"312","location":{"end":{"column":29,"line":102},"start":{"column":5,"line":102}},"mutatorName":"BinaryExpression","replacement":"typeof phrase == 'string'","status":"Killed"},{"id":"314","location":{"end":{"column":85,"line":102},"start":{"column":37,"line":102}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"316","location":{"end":{"column":31,"line":104},"start":{"column":15,"line":104}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"315","location":{"end":{"column":13,"line":103},"start":{"column":11,"line":103}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"318","location":{"end":{"column":31,"line":104},"start":{"column":15,"line":104}},"mutatorName":"BinaryExpression","replacement":"i >= phrase.length","status":"Killed"},{"id":"319","location":{"end":{"column":35,"line":104},"start":{"column":32,"line":104}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Killed"},{"id":"317","location":{"end":{"column":31,"line":104},"start":{"column":15,"line":104}},"mutatorName":"BinaryExpression","replacement":"i <= phrase.length","status":"Killed"},{"id":"320","location":{"end":{"column":3,"line":107},"start":{"column":36,"line":104}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"321","location":{"end":{"column":21,"line":105},"start":{"column":6,"line":105}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"322","location":{"end":{"column":21,"line":105},"start":{"column":6,"line":105}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"324","location":{"end":{"column":21,"line":105},"start":{"column":18,"line":105}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"325","location":{"end":{"column":75,"line":105},"start":{"column":48,"line":105}},"mutatorName":"BinaryExpression","replacement":"phrase[i].charCodeAt(0) - 1","status":"Killed"},{"id":"323","location":{"end":{"column":21,"line":105},"start":{"column":6,"line":105}},"mutatorName":"BinaryExpression","replacement":"phrase[i] == \" \"","status":"Killed"},{"id":"327","location":{"end":{"column":2,"line":134},"start":{"column":30,"line":123}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"326","location":{"end":{"column":16,"line":106},"start":{"column":13,"line":106}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"329","location":{"end":{"column":29,"line":125},"start":{"column":15,"line":125}},"mutatorName":"BinaryExpression","replacement":"i <= array.length","status":"Survived"},{"id":"328","location":{"end":{"column":29,"line":125},"start":{"column":15,"line":125}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"330","location":{"end":{"column":29,"line":125},"start":{"column":15,"line":125}},"mutatorName":"BinaryExpression","replacement":"i >= array.length","status":"Killed"},{"id":"333","location":{"end":{"column":32,"line":127},"start":{"column":18,"line":127}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"332","location":{"end":{"column":3,"line":132},"start":{"column":34,"line":125}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"334","location":{"end":{"column":16,"line":127},"start":{"column":13,"line":127}},"mutatorName":"BinaryExpression","replacement":"i - 1","status":"Killed"},{"id":"335","location":{"end":{"column":32,"line":127},"start":{"column":18,"line":127}},"mutatorName":"BinaryExpression","replacement":"j <= array.length","status":"Survived"},{"id":"338","location":{"end":{"column":4,"line":131},"start":{"column":37,"line":127}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"339","location":{"end":{"column":25,"line":128},"start":{"column":7,"line":128}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"340","location":{"end":{"column":25,"line":128},"start":{"column":7,"line":128}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"342","location":{"end":{"column":5,"line":130},"start":{"column":26,"line":128}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"341","location":{"end":{"column":25,"line":128},"start":{"column":7,"line":128}},"mutatorName":"BinaryExpression","replacement":"variable != array[j]","status":"Killed"},{"id":"343","location":{"end":{"column":10,"line":129},"start":{"column":5,"line":129}},"mutatorName":"PostfixUnaryExpression","replacement":"res--","status":"Killed"},{"id":"292","location":{"end":{"column":27,"line":83},"start":{"column":24,"line":83}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"RuntimeError"},{"id":"331","location":{"end":{"column":33,"line":125},"start":{"column":30,"line":125}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Timeout"},{"id":"336","location":{"end":{"column":32,"line":127},"start":{"column":18,"line":127}},"mutatorName":"BinaryExpression","replacement":"j >= array.length","status":"Timeout"},{"id":"337","location":{"end":{"column":36,"line":127},"start":{"column":33,"line":127}},"mutatorName":"PostfixUnaryExpression","replacement":"j--","status":"Timeout"}],"source":"let Util = {};\nUtil.factorial = (n) => {\n    if (n === 0) {\n        return 1;\n    }\n\n    if (n >= 3000) {\n        throw 'n too large'\n    }\n\n    if (n < 0) {\n        throw 'n is negative'\n    }\n\n    return n * Util.factorial(n - 1);\n};\n\n/**\n * Détermine si n est un nombre premier.\n * Util.isPrime(5) => false\n * Util.isPrime(6) => true\n *\n * @param {number} n\n * @returns {boolean}\n */\nUtil.isPrime = function (n) {\n    if (n === 1 || n === 0) {\n        return false;\n    }\n    if (n < 0) {\n        throw 'Unable to compute prime for n < 0'\n    }\n    for (var i = 2; i < n; i++)\n        if (n % i === 0) return false;\n    return true;\n\n};\n\n\n/**\n * Additionne l'ensemble des nombres premiers de 2 à n\n *\n * Util.sumPrime(6) = 2 + 3 + 5 = 10\n * Util.sumPrime(8) = 2 + 3 + 5 + 7 = 17\n *\n * @param {number} n\n * @returns {number}\n */\nUtil.sumPrime = function(n) {\n\tvar res=0;\t\n\tif(typeof n !=typeof 1) throw 'Unable to compute sumPrime for n not number (int)';\n\tif(n>=2){\n\t\tfor(var i=2; i<=n;i++){\n\t\t\tif(Util.isPrime(i)){\n\t\t\t\tres+=i;\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tif(n<0){\n\t\tthrow 'Unable to compute sumPrime for n < 0'\t\n\t}\n\treturn res;\n};\n\n/**\n * Cette méthode doit retourner un tableau de 1 à n tel que:\n * - Pour les nombres multiples de 3, les remplacer par \"Fizz\"\n * - Pour les nombres multiples de 5, les remplacer par \"Buzz\"\n * - Pour les nombres multiples de 3 et 5, les remplacer par \"FizzBuzz\"\n *\n * Exp :\n * Util.fizzBuzz(15) => [1, 2, \"Fizz\", 4, \"Buzz\", \"Fizz\", 7, 8, \"Fizz\", \"Buzz\", 11, \"Fizz\", 13, 14, \"FizzBuzz\"]\n *\n * @param {number} n\n * @returns {array}\n */\nUtil.fizzBuzz = function(n) {\n\tvar tabRes=[];\n\tif(typeof n !=typeof 1) throw 'Unable to compute fizzBuzz for n not number (int)';\n\tif(n<1){\n\t\tthrow 'Unable to compute fizzBuzz for n < 1';\t\n\t}\n\tfor (var i=1; i <= n; i++){\n    \t\tif (i % 15 == 0) tabRes.push('FizzBuzz');\n    \t\telse if (i % 3 == 0) tabRes.push(\"Fizz\");\n    \t\telse if (i % 5 == 0) tabRes.push(\"Buzz\");\n    \t\telse tabRes.push(i);\n\t}\n\treturn tabRes;\n};\n\n/**\n * Chiffre une phrase selon la règle suivante : Les A deviennent des B, les B des C, etc.\n *\n * Exp :\n * Util.cipher(\"Test Unitaire\") => \"Uftu Tojubjsf\"\n *\n * @param phrase\n * @returns {string}\n */\nUtil.cipher = function (phrase) {\n\tif(typeof phrase !='string') throw 'Unable to compute cipher for phrase not string';\t\n\tvar res =\"\";\n\tfor(let i=0; i< phrase.length;i++){\n\t\tif(phrase[i] !=\" \") res+=String.fromCharCode(phrase[i].charCodeAt(0) + 1);\n\t\telse res+=\" \";\n\t}\n\treturn res;\n};\n\n/**\n * Retourne le nombre de paires dans un tableau\n *\n * Exp :\n *\n * Util.pairs([3,3]) => 1\n * Util.pairs([3,3,5,]) => 1\n * Util.pairs([3,3,5,5,5]) => 4\n *\n * @param array\n * @return int\n */\nUtil.pairs = function(array) {\n\tlet res=0;\n\tfor(let i=0; i<array.length;i++){\n\t\tlet variable=array[i];\t\n\t\tfor(let j=i+1; j<array.length;j++){\n\t\t\tif(variable==array[j]){\n\t\t\t\tres++;\t\t\t\n\t\t\t}\n\t\t}\t\n\t}\n\treturn res;\n};\n\nmodule.exports = Util;\n\n"},"/home/tahrim/Téléchargements/Cours/2A/TestUnitaire/tp-jest/src/test-script.js":{"language":"javascript","mutants":[{"id":"344","location":{"end":{"column":51,"line":1},"start":{"column":32,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"345","location":{"end":{"column":26,"line":2},"start":{"column":20,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"346","location":{"end":{"column":2,"line":12},"start":{"column":17,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"347","location":{"end":{"column":9,"line":8},"start":{"column":5,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"348","location":{"end":{"column":11,"line":9},"start":{"column":5,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"349","location":{"end":{"column":19,"line":9},"start":{"column":13,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"350","location":{"end":{"column":12,"line":10},"start":{"column":5,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"351","location":{"end":{"column":15,"line":11},"start":{"column":5,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"352","location":{"end":{"column":30,"line":11},"start":{"column":18,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"const BookRepository = require('./book.repository');\nconst db = require('./db')\n\nconst repository = new BookRepository(db);\n\n\nrepository.save({\n    'id' : 1,\n    \"name\" :\"test\",\n    'price' :6.1,\n    \"added_at\" : '2019-01-01'\n});"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};